import makeStyles from "@mui/styles/makeStyles"
import {COLOR} from "../../../../enums"
import {CrossIcon} from "../../../common/icons"
import {Hidden, IconButton} from "@mui/material"
import CartList from "../cart-list"
import {useDispatch, useSelector} from "react-redux"
import {closeCartModal} from "../../../../redux/states/settings/actions"
import CartItem from "../cart-item"
import {useEffect, useState} from "react"
import {getCartItems, getCartStores} from "../../../../redux/states/cart/getters"
import {IProduct} from "../../../common/products/interfaces"

const useStyles = makeStyles({
    cart: {

    },
    header: {
        height: 72,
        backgroundColor: COLOR.WHITE,
        padding: '16px 24px',
        fontSize: '24px',
        fontWeight: 500,
        borderBottom: `1px solid ${COLOR.GRAY}`,
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
    },
    content: {
        padding: 16,
    },
    all_sum_wrapper: {
        display: 'flex',
        justifyContent: 'space-between',
        fontSize: '16px',
        fontWeight: 500,
    },
    no_items: {
        textAlign: 'center',
        marginTop: '30%',
        marginBottom: 200,
    },
    no_items_icon_wrapper: {
        display: 'flex',
        justifyContent: 'center',
    },
    no_items_title: {
        fontSize: '24px',
        fontWeight: 500,
        lineHeight: '40px',
        marginTop: 36,
    },
    no_items_text: {
        fontSize: '16px',
        lineHeight: '24px',
        color: '#676767',
        marginTop: 8,
    }
})

function CartContent() {

    const dispatch = useDispatch()
    const classes = useStyles()
    const cartStores = useSelector(getCartStores)

    const handleClose = () => dispatch(closeCartModal())

    return (
        <div className={classes.cart}>
            <header className={classes.header}>
                <span>Busket</span>
                <Hidden only={["xs", "sm", "md"]}>
                    <IconButton onClick={handleClose}>
                        <CrossIcon/>
                    </IconButton>
                </Hidden>
            </header>
            <div className={classes.content}>

                {
                    cartStores.length ?
                        cartStores.map((store: any) => {
                            return (
                            <CartList
                                key={store.id}
                                // @ts-ignore
                                storeName={store.storeid?.username}
                                // @ts-ignore
                                storeSlug={store.storeid?.slug}
                                // @ts-ignore
                                storeTotalSum={store.total_price}
                            >
                                {
                                    // @ts-ignore
                                    store.listitem.map(item => <CartItem key={item.id} item={item.item} quantity={item.quantity}/>)
                                }
                            </CartList>
                        )
                    }) :
                        <div className={classes.no_items}>
                            <div className={classes.no_items_icon_wrapper}>
                                <svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <circle cx="100" cy="100" r="100" fill="#0AAD3B" fillOpacity="0.1"/>
                                    <path d="M117.904 156.896H142.105C142.615 156.896 143.103 156.693 143.464 156.33C143.824 155.968 144.026 155.477 144.026 154.964V147.795H115.982V154.964C115.982 155.477 116.185 155.968 116.545 156.33C116.905 156.693 117.394 156.896 117.904 156.896Z" fill="#3C8D3A"/>
                                    <path d="M57.916 156.896H82.0967C82.6063 156.896 83.0949 156.693 83.4552 156.33C83.8155 155.968 84.018 155.477 84.018 154.964V147.795H55.9824V154.964C55.9824 155.219 56.0325 155.471 56.1298 155.707C56.2272 155.942 56.3698 156.155 56.5495 156.335C56.7292 156.514 56.9425 156.656 57.177 156.753C57.4115 156.849 57.6627 156.898 57.916 156.896Z" fill="#3C8D3A"/>
                                    <path d="M38.8828 82.042L47.4537 147.02C47.739 149.207 48.8051 151.216 50.4535 152.671C52.1019 154.126 54.2202 154.929 56.4138 154.931H143.589C145.782 154.93 147.901 154.127 149.55 152.672C151.198 151.216 152.264 149.208 152.549 147.02L161.12 82.042H38.8828ZM48.8781 88.8492L50.1202 99.6033H45.9797L44.6464 88.8492H48.8781ZM150.247 129.451H146.4L147.679 118.476H151.629L150.247 129.451ZM65.2083 103.554H69.3033L70.0941 114.529H66.1068L65.2083 103.554ZM60.9808 114.529H56.9935L55.8548 103.554H59.9457L60.9808 114.529ZM74.5659 103.554H78.6567L79.2116 114.529H75.2242L74.5659 103.554ZM83.9194 103.554H88.0143L88.3249 114.529H84.3375L83.9194 103.554ZM93.277 103.554H97.3885L97.4547 114.529H93.4674L93.277 103.554ZM102.635 103.554H106.725L106.551 114.529H102.564L102.635 103.554ZM111.988 103.554H116.083L115.669 114.529H111.682L111.988 103.554ZM121.346 103.554H125.441L124.782 114.529H120.795L121.346 103.554ZM130.703 103.554H134.794L133.896 114.529H129.908L130.703 103.554ZM140.057 103.554H144.152L143.009 114.529H139.022L140.057 103.554ZM149.414 103.554H153.505L152.126 114.529H148.139L149.414 103.554ZM141.46 129.451H137.614L138.649 118.476H142.599L141.46 129.451ZM132.674 129.451H128.832L129.623 118.476H133.573L132.674 129.451ZM123.888 129.451H120.045L120.596 118.476H124.546L123.888 129.451ZM115.102 129.451H111.259L111.57 118.476H115.516L115.102 129.451ZM106.315 129.451H102.473L102.539 118.476H106.498L106.315 129.451ZM97.5293 129.451H93.6869L93.513 118.476H97.463L97.5293 129.451ZM88.7472 129.451H84.9007L84.4866 118.476H88.4367L88.7472 129.451ZM79.961 129.451H76.1145L75.4437 118.476H79.3938L79.961 129.451ZM71.1748 129.451H67.3282L66.4298 118.476H70.3798L71.1748 129.451ZM62.3886 129.451H58.5462L57.4034 118.476H61.3659L62.3886 129.451ZM53.6024 129.451H49.7724L48.3895 118.476H52.3395L53.6024 129.451ZM47.8802 114.529L46.4972 103.554H50.6005L51.8758 114.529H47.8802ZM58.5586 88.8492L59.573 99.6033H55.4325L54.327 88.8492H58.5586ZM68.2392 88.8492L69.0176 99.6033H64.8771L64.0034 88.8492H68.2392ZM77.928 88.8492L78.4663 99.6033H74.3257L73.684 88.8492H77.928ZM87.6086 88.8492L87.9108 99.6033H83.7703L83.3562 88.8492H87.6086ZM97.2891 88.8492L97.3554 99.6033H93.2148L93.0451 88.8492H97.2891ZM106.97 88.8492L106.796 99.6033H102.655L102.722 88.8492H106.97ZM116.646 88.8492L116.232 99.6033H112.092L112.398 88.8492H116.646ZM126.327 88.8492L125.685 99.6033H121.544L122.083 88.8492H126.327ZM136.007 88.8492L135.125 99.6033H130.985L131.755 88.8492H136.007ZM145.688 88.8492L144.57 99.6033H140.45L141.444 88.8492H145.688ZM155.356 88.8492L154.002 99.6033H149.861L151.104 88.8492H155.356ZM144.897 142.403L145.94 133.398H149.745L148.615 142.399L144.897 142.403ZM136.396 142.403L137.225 133.402H141.034L140.098 142.403H136.396ZM127.896 142.403L128.546 133.398H132.351L131.614 142.399L127.896 142.403ZM119.395 142.403L119.847 133.398H123.652L123.114 142.399L119.395 142.403ZM110.895 142.403L111.147 133.402H114.953L114.613 142.403H110.895ZM102.394 142.403L102.448 133.402H106.253L106.113 142.403H102.394ZM93.8939 142.403L93.749 133.398H97.5541L97.6121 142.399L93.8939 142.403ZM85.3934 142.403L85.0497 133.398H88.8549L89.1116 142.399L85.3934 142.403ZM76.8929 142.403L76.3505 133.398H80.1598L80.6111 142.399L76.8929 142.403ZM68.3924 142.403L67.6554 133.398H71.4605L72.1313 142.403H68.3924ZM59.8919 142.403L58.9561 133.398H62.7612L63.5894 142.399L59.8919 142.403ZM51.3914 142.403L50.2568 133.398H54.062L55.1095 142.399L51.3914 142.403Z" fill="#4AAD47"/>
                                    <path d="M160.511 86.6676H39.4956L38.8828 82.042H161.12L160.511 86.6676Z" fill="#3C8D3A"/>
                                    <path d="M161.708 75.3066H38.2992C37.0758 75.3066 36.084 76.3039 36.084 77.5341V83.1047C36.084 84.3349 37.0758 85.3321 38.2992 85.3321H161.708C162.931 85.3321 163.923 84.3349 163.923 83.1047V77.5341C163.923 76.3039 162.931 75.3066 161.708 75.3066Z" fill="#79C776"/>
                                    <path d="M115.512 83.8791C113.388 84.2663 111.967 77.8297 114.096 77.4383L125.73 75.3067H161.707C162.101 75.3052 162.487 75.41 162.827 75.6099C163.166 75.8098 163.446 76.0976 163.637 76.4433L115.512 83.8791Z" fill="#68C065"/>
                                    <path d="M38.2982 75.3066H74.2752L85.9101 77.4383C88.0383 77.8297 86.6181 84.3329 84.4899 83.9416L36.377 76.4474C36.5675 76.1028 36.846 75.8154 37.1836 75.6149C37.5213 75.4144 37.906 75.308 38.2982 75.3066Z" fill="#68C065"/>
                                    <path d="M33.334 74.4942L84.4902 83.8785C85.512 84.0655 86.5658 83.8367 87.4199 83.2426C88.274 82.6484 88.8585 81.7375 89.0448 80.7102V80.6311C89.2307 79.6036 89.0032 78.544 88.4124 77.6852C87.8215 76.8264 86.9156 76.2387 85.8939 76.0513L34.7542 66.667L33.334 74.4942Z" fill="#3C8D3A"/>
                                    <path d="M166.667 74.4942L115.511 83.8785C114.489 84.0643 113.436 83.8351 112.582 83.2412C111.729 82.6472 111.144 81.737 110.957 80.7102V80.6311C110.864 80.1223 110.872 79.6001 110.98 79.0945C111.089 78.5888 111.295 78.1096 111.588 77.6842C111.88 77.2588 112.253 76.8957 112.686 76.6155C113.118 76.3353 113.601 76.1436 114.107 76.0513L165.26 66.667L166.667 74.4942Z" fill="#3C8D3A"/>
                                    <path d="M82.7969 79.8446C82.7961 80.2802 82.924 80.7063 83.1645 81.0687C83.405 81.4311 83.7471 81.7135 84.1475 81.88C84.5479 82.0466 84.9885 82.0897 85.4133 82.004C85.8382 81.9183 86.2281 81.7076 86.5336 81.3987C86.8391 81.0897 87.0464 80.6965 87.1292 80.2688C87.2121 79.8412 87.1666 79.3985 86.9987 78.9968C86.8308 78.5952 86.548 78.2528 86.1862 78.0131C85.8244 77.7734 85.3999 77.6472 84.9667 77.6505C84.3901 77.6538 83.8382 77.8864 83.4316 78.2975C83.0251 78.7086 82.7969 79.2648 82.7969 79.8446Z" fill="white"/>
                                    <path d="M117.205 79.8445C117.206 80.2796 117.078 80.7052 116.838 81.0674C116.598 81.4295 116.257 81.7119 115.857 81.8788C115.457 82.0457 115.017 82.0896 114.593 82.0049C114.168 81.9202 113.778 81.7108 113.472 81.4031C113.166 81.0954 112.958 80.7033 112.874 80.2765C112.79 79.8497 112.833 79.4074 112.999 79.0055C113.165 78.6037 113.446 78.2604 113.806 78.0191C114.166 77.7779 114.59 77.6496 115.023 77.6504C115.601 77.6504 116.156 77.8816 116.566 78.293C116.975 78.7045 117.205 79.2626 117.205 79.8445Z" fill="white"/>
                                </svg>
                            </div>
                            <p className={classes.no_items_title}>
                                Empty busket
                            </p>
                            <p className={classes.no_items_text}>
                            No item inside cart
                            </p>
                        </div>
                }

            </div>

        </div>
    )
}

const getTotalSum = (items: IProduct[]) => {
    let sum = 0

    items.forEach((item: IProduct) => sum += (item.amount * item.cost))

    return sum
}

export default CartContent
